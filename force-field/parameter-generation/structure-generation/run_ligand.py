"""Generate a pdb file for a ligand with an input SMILES string
using RDKit.

This script is used to generate a pdb file for a ligand with an
input SMILES string. The script uses RDKit to convert the SMILES
string to a 3D coordinate structure, optimize the structure with
the MMFF94 force field, and convert the optimized structure to a
pdb file.

The script also adds a header to the pdb file with the ligand
name and author information.

Author: Alec Glisman
Date: April 21st, 2023

Parameters
----------
smiles : str
    The SMILES string for the ligand.
pname : str
    The name of the ligand.
fname : str
    The filename for the pdb file.

Notes
-----
The output pdb file will be saved in the same directory as the
script.
"""

from rdkit import Chem
from rdkit.Chem import AllChem
from rdkit.Chem.rdForceFieldHelpers import MMFFOptimizeMolecule
import warnings

smiles: str = "C(=O)([O-])[O-]"
pname: str = "CARBONATE"
fname: str = "carbonate"

if __name__ == "__main__":
    # convert SMILES string to 3D coordinate structure
    mol = Chem.MolFromSmiles(smiles)
    mol = Chem.AddHs(mol)
    AllChem.EmbedMolecule(mol)

    # geometry optimization of coordinates
    converge = MMFFOptimizeMolecule(mol, maxIters=10000)
    if converge == -1:
        warnings.warn("Geometry optimization failed to initialize.")
    if converge == 1:
        warnings.warn("Geometry optimization did not converge.")

    # convert optimized coordinates to pdb format
    pdb_str = Chem.rdmolfiles.MolToPDBBlock(mol)

    # replace HETATM with ATOM and UNL with UNL A
    pdb_str = pdb_str.replace("HETATM", "ATOM  ")
    pdb_str = pdb_str.replace("UNL  ", "UNL A")

    # save pdb to file
    with open(f"{fname}.pdb", "w", encoding="utf-8") as file:
        # add header
        file.write(f"COMPND    {pname}\n")
        file.write("AUTHOR    GENERATED BY ALEC GLISMAN WITH RDKIT\n")
        # output pdb text
        file.write(pdb_str)
